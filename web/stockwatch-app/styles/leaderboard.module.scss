@import './_variables.scss';
@import 'include-media/dist/_include-media.scss';
@import '_mixins.scss';

.page {
    display: grid;
    gap: 1rem;
}

.table {
    border-collapse: collapse;
    width: 100%;
    border-radius: var(--border-radius);
    max-width: 800px;
    margin: 0 auto;
    color: var(--slate12);
}

.tableRow {
    background: var(--slate3);
    border: solid 1px var(--slate6);
    border-radius: var(--border-radius);
    margin-bottom: 0.5rem;
}

.tableCell {
    padding: 1rem 1.5rem;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
}

.networthCell {
}

.rankCell {
    background: var(--slate7);
    border-radius: var(--border-radius);
    display: flex;
    justify-content: center;
    align-content: center;
    aspect-ratio: 1/1;
    align-items: center;
    max-height: var(--btn-height);
}

.playerCell {
    display: flex;
    align-items: center;
    gap: 1rem;
    display: flex;
    flex-wrap: wrap;

    a {
        text-overflow: ellipsis;
        overflow: hidden;
        white-space: nowrap;
        max-width: 16ch;
    }
}

.playerDetails {
    display: grid;
    grid-auto-columns: auto;
    gap: 1rem;
}

.playerStats {
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
}

.playerHoldings {
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
}

.playerBadges {
    display: flex;
    gap: 0.5rem;
    flex: 0 1 auto;
}

.collapseBtnCell {
}

@include media('>tablet') {
    .tableHeader {
        display: grid;
        grid-template-columns: min-content 3fr 1fr min-content;
        grid-template-rows: auto;
        grid-column-gap: 2rem;
        align-items: start;
        padding: 1rem;
        background: var(--slate4);
        border: solid 1px var(--slate6);
        border-radius: var(--border-radius);
        margin-bottom: 0.75rem;

        > .tableCell:first-of-type,
        :last-of-type {
            min-width: var(--btn-height);
        }
    }

    .headerCell {
        text-align: left;
        font-size: var(--font-size-large);
        font-weight: var(--font-weight-bold);
    }

    .tableRow:not(.expandedRow) {
        display: grid;
        grid-template-columns: min-content 3fr 1fr min-content;
        grid-template-rows: auto;
        grid-column-gap: 2rem;
        align-items: center;
        padding: 1rem;

        > .tableCell:first-of-type {
            aspect-ratio: 1/1;
            min-width: var(--btn-height);
        }
    }

    .tableRowHasExpanded {
        margin-bottom: 0;
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
        border-bottom: 0;
    }

    .expandedRow {
        border-top-left-radius: 0;
        border-top-right-radius: 0;
        border-top: 0;
        padding: 1rem;
        display: grid;
    }

    .tableCell {
        padding: 0;
        font-size: var(--h2);
    }
}

.collapsed {
    svg {
        transform: rotate(180deg);
        transition: transform 0.2s ease-in-out;
    }
}

.expanded {
    svg {
        transition: transform 0.2s ease-in-out;
    }
}

.pagination {
    display: flex;
    flex-direction: row;
    gap: 1rem;
    align-items: center;
    place-self: end;
}
